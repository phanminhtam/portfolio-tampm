# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-04-03 06:15
from __future__ import unicode_literals

import aldryn_apphooks_config.fields
import app_data.fields
from django.db import migrations, models
import django.db.models.deletion
import djangocms_text_ckeditor.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cms', '0018_pagenode'),
    ]

    operations = [
        migrations.CreateModel(
            name='MediaAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Image'), (2, 'Youtube Embed Video')], default=1)),
                ('media_asset', models.ImageField(default='', upload_to='portfolio/img/')),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioAppConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100, verbose_name='Type')),
                ('namespace', models.CharField(default=None, max_length=100, unique=True, verbose_name='Instance namespace')),
                ('app_data', app_data.fields.AppDataField(default='{}', editable=False)),
                ('paginate_by', models.PositiveIntegerField(default=100, verbose_name='Paginate size')),
            ],
            options={
                'verbose_name': 'Apphook config',
                'verbose_name_plural': 'Apphook configs',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='portfolio_app_project', serialize=False, to='cms.CMSPlugin')),
                ('slug', models.SlugField(blank=True, max_length=255, verbose_name='slug')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=250, null=True)),
                ('description', djangocms_text_ckeditor.fields.HTMLField(blank=True, default='', verbose_name='description')),
                ('skills', models.CharField(blank=True, max_length=255, null=True)),
                ('roles', models.CharField(blank=True, max_length=255, null=True)),
                ('client', models.CharField(blank=True, max_length=255, null=True)),
                ('length', models.CharField(blank=True, max_length=50, null=True)),
                ('demo_url', models.URLField(blank=True, max_length=255, null=True)),
                ('app_config', aldryn_apphooks_config.fields.AppHookConfigField(help_text='When selecting a value, the form is reloaded to get the updated default', on_delete=django.db.models.deletion.CASCADE, to='portfolio_app.PortfolioAppConfig')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='portfolio_app_tag', serialize=False, to='cms.CMSPlugin')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=models.ManyToManyField(related_name='project', to='portfolio_app.Tag', verbose_name='tag'),
        ),
        migrations.AlterUniqueTogether(
            name='portfolioappconfig',
            unique_together=set([('type', 'namespace')]),
        ),
        migrations.AddField(
            model_name='mediaasset',
            name='project_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio_app.Project'),
        ),
    ]
